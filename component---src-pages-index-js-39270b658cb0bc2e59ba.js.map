{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TitleAndDescription","_ref","data","console","log","title","site","siteMetadata","description","react_default","a","createElement","style","display","flexDirection","alignItems","fontFamily","marginBottom","marginTop","opacity","Header","gatsby_browser_entry","query","render","Header_TitleAndDescription","_920796110","__webpack_require__","d","__webpack_exports__","Layout","edges","allMarkdownRemark","components_Header","map","edge","frontmatter","node","key","path","to","m","module","exports","require","default","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","props","children","Consumer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"uIAGMA,EAAsB,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAC1BC,QAAQC,IAAI,CAACF,SACb,IAAMG,EAAQH,EAAKI,KAAKC,aAAaF,MAC/BG,EAAcN,EAAKI,KAAKC,aAAaC,YAG3C,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACRC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,WAAY,WAEZP,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACK,aAAc,IACrBZ,GAELI,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CACFM,UAAW,EACXC,QAAmW,KACnWX,KA4BLY,EAnBA,WACX,OACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACIC,MAAK,YAULC,OAAQ,SAAArB,GAAI,OAAIO,EAAAC,EAAAC,cAACa,EAAD,CAAqBtB,KAAMA,KAX/CA,KAAAuB,KCjCRC,EAAAC,EAAAC,EAAA,0BAAAN,IAIA,IAkCaA,EAAK,aAmBHO,UArDA,SAAA5B,GAAY,IACf6B,EADe7B,EAAVC,KACU6B,kBAAfD,MACR,OACCrB,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVC,QAAQ,OACRC,cAAe,SACfC,WAAY,SACZC,WAAY,WAEbc,EAAMG,IAAI,SAAAC,GAAQ,IACRC,EAAeD,EAAKE,KAApBD,YAEP,OACI1B,EAAAC,EAAAC,cAAA,OACE0B,IAAKF,EAAYG,KAEjB1B,MAAO,CAACK,aAAc,SAEtBR,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMkB,GAAIJ,EAAYG,MACnBH,EAAY9B,UAKvBI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMkB,GAAG,SAAT,0CC/Bd,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/Cd,EAAAC,EAAAC,EAAA,sBAAAiB,IAAA,IAAAC,EAAApB,EAAA,GAAAqB,EAAArB,EAAAsB,EAAAF,GAAAG,EAAAvB,EAAA,IAAAwB,EAAAxB,EAAAsB,EAAAC,GAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,EAAAxC,IAAAgB,EAAA,KAAAA,EAAA,GAcyByB,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATvD,GAA2E,IAAxCwD,EAAwCxD,EAAxCwD,gBAAiBvD,EAAuBD,EAAvBC,KAAMoB,EAAiBrB,EAAjBqB,MAAOC,EAAUtB,EAAVsB,OACzDmC,EAAYxD,EACdA,EAAKA,KACLuD,EAAgBnC,IAAUmC,EAAgBnC,GAAOpB,KAErD,OACE6C,EAAArC,EAAAC,cAACoC,EAAArC,EAAMiD,SAAP,KACGD,GAAanC,EAAOmC,IACnBA,GAAaX,EAAArC,EAAAC,cAAA,qCAKrB,IAAMkC,EAAc,SAAAe,GAAS,IACnB1D,EAAkC0D,EAAlC1D,KAAMoB,EAA4BsC,EAA5BtC,MAAOC,EAAqBqC,EAArBrC,OAAQsC,EAAaD,EAAbC,SAE7B,OACEd,EAAArC,EAAAC,cAAC0C,EAAmBS,SAApB,KACG,SAAAL,GAAe,OACdV,EAAArC,EAAAC,cAAC6C,EAAD,CACEtD,KAAMA,EACNoB,MAAOA,EACPC,OAAQA,GAAUsC,EAClBJ,gBAAiBA,kFCnBZM,UAjBU,SAAA9D,GAAiC,IAA9B+D,EAA8B/D,EAA9B+D,SAAUC,EAAoBhE,EAApBgE,cACpC,OAAKA,EAGEX,IAAM3C,cAAcuD,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-pages-index-js-39270b658cb0bc2e59ba.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst TitleAndDescription = ({data}) => {\n    console.log({data})\n    const title = data.site.siteMetadata.title\n    const description = data.site.siteMetadata.description\n    // const date = data.site.siteMetadata.date\n    \n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontFamily: 'avenir'\n        }}>\n            <h2 style={{marginBottom: 0}}>\n                {title}\n            </h2>\n            <p style={{\n                    marginTop: 0,\n                    opacity:                                                                                                                                                                                                                                                                                                                                                           0.5\n                }}>{description}\n            </p>\n            {/* <h3 style={{marginBottom: 0}}>\n                {date}\n            </h3> */}\n        </div>\n    )\n}\n\nconst Header = () => {\n    return (\n        <StaticQuery \n            query={graphql`\n                query {\n                    site {\n                        siteMetadata {\n                            title\n                            description\n                        }\n                    }\n                }\n            `}\n            render={data => <TitleAndDescription data={data}/>\n            }\n        />\n    )\n}\n\nexport default Header","import React from 'react'\nimport { graphql, Link} from 'gatsby'\nimport Header from '../components/Header'\n\nconst Layout = ({data}) => {\n    const { edges } = data.allMarkdownRemark\n    return (\n     <div>\n          <Header />\n          <div style={{\n            display:'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontFamily: 'avenir'\n          }}>\n          {edges.map(edge => {\n              const {frontmatter} = edge.node\n              // const frontmatter = edge.node.frontmatter\n              return (\n                  <div \n                    key={frontmatter.path}\n                    //why add a key what is it used for?\n                    style={{marginBottom: '1rem'}}\n                  >\n                    <Link to={frontmatter.path}>\n                      {frontmatter.title}\n                    </Link>\n                  </div>\n              )\n          })}\n            <div>\n              <Link to='/tags'>Browse by Tag</Link>\n            </div>\n          </div>\n     </div>\n    )\n}\n\nexport const query = graphql`\n    query HomepageQuery {\n      allMarkdownRemark(\n        sort: {order: DESC, fields: [frontmatter___date]}\n      ) {\n        edges {\n          node {\n            frontmatter {\n              title\n              path\n              date\n            }\n          }\n        }\n      }\n    }\n`\n//here we are ordering our blog names in descending\n//order based of of the dates they were posted.\nexport default Layout\n\n//how is query being used on line 24 \"query HomepageQuery\"","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}