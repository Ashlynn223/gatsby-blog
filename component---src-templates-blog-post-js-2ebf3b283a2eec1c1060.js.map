{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","Template","_ref","data","pageContext","console","log","next","prev","markdownRemark","title","frontmatter","html","a","createElement","style","fontFamily","className","dangerouslySetInnerHTML","__html","marginBottom","to","path","m","module","exports","require","default","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAsCaI,EAAK,aAWHK,UA7CE,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,YACrBC,QAAQC,IAAIF,GAD0B,IAI/BG,EAAcH,EAAdG,KAAMC,EAAQJ,EAARI,KAINC,EAAkBN,EAAlBM,eACDC,EAAQD,EAAeE,YAAYD,MACnCE,EAAOH,EAAeG,KAC5B,OACId,EAAAe,EAAAC,cAAA,WACIhB,EAAAe,EAAAC,cAAA,MAAIC,MAAO,CAACC,WAAY,WAAYN,GACpCZ,EAAAe,EAAAC,cAAA,OAAKG,UAAU,WACXC,wBAAyB,CAACC,OAAQP,KAGtCd,EAAAe,EAAAC,cAAA,OAAKC,MAAO,CAACK,aAAc,OAAQJ,WAAY,WAC1CT,GACGT,EAAAe,EAAAC,cAACd,EAAA,EAAD,CAAMqB,GAAId,EAAKI,YAAYW,MAA3B,QAIHd,GACGV,EAAAe,EAAAC,cAACd,EAAA,EAAD,CAAMqB,GAAIb,EAAKG,YAAYW,MAA3B,gCC7BpB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C/B,EAAAG,EAAAD,EAAA,sBAAAkC,IAAA,IAAA/B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAgC,EAAArC,EAAA,IAAAsC,EAAAtC,EAAAO,EAAA8B,GAAArC,EAAAG,EAAAD,EAAA,sBAAAoC,EAAAjB,IAAArB,EAAA,KAAAA,EAAA,GAcyBuC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATlC,GAA2E,IAAxCmC,EAAwCnC,EAAxCmC,gBAAiBlC,EAAuBD,EAAvBC,KAAMP,EAAiBM,EAAjBN,MAAO0C,EAAUpC,EAAVoC,OACzDC,EAAYpC,EACdA,EAAKA,KACLkC,EAAgBzC,IAAUyC,EAAgBzC,GAAOO,KAErD,OACEL,EAAAe,EAAAC,cAAChB,EAAAe,EAAM2B,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAazC,EAAAe,EAAAC,cAAA,qCAKrB,IAAMc,EAAc,SAAAa,GAAS,IACnBtC,EAAkCsC,EAAlCtC,KAAMP,EAA4B6C,EAA5B7C,MAAO0C,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACE5C,EAAAe,EAAAC,cAACmB,EAAmBU,SAApB,KACG,SAAAN,GAAe,OACdvC,EAAAe,EAAAC,cAACsB,EAAD,CACEjC,KAAMA,EACNP,MAAOA,EACP0C,OAAQA,GAAUI,EAClBL,gBAAiBA,kFCnBZO,UAjBU,SAAA1C,GAAiC,IAA9B2C,EAA8B3C,EAA9B2C,SAAUC,EAAoB5C,EAApB4C,cACpC,OAAKA,EAGEZ,IAAMpB,cAAciC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-templates-blog-post-js-2ebf3b283a2eec1c1060.js","sourcesContent":["import React from 'react'\n//what exactly is this doing? \nimport { graphql, Link } from 'gatsby'\n\nconst Template = ({data, pageContext}) => {\n    console.log(pageContext)\n    //üêô! couldn't find in console (why should \n    // this show you the pathSlug?)\n    const {next, prev} = pageContext\n    //same thing as saying\n    //next = pageContent.next\n    //and prev = pageContent.prev\n    const {markdownRemark} = data\n    const title = markdownRemark.frontmatter.title\n    const html = markdownRemark.html\n    return (\n        <div>\n            <h1 style={{fontFamily: 'avenir'}}>{title}</h1>\n            <div className='blogpost'\n                dangerouslySetInnerHTML={{__html: html}}\n                //???? Not sure why the double underscore.\n            />\n            <div style={{marginBottom: '1rem', fontFamily: 'avenir'}}>\n                {next && \n                    <Link to={next.frontmatter.path}>\n                        Next  \n                    </Link>\n                }\n                {prev && \n                    <Link to={prev.frontmatter.path}>\n                        Prev\n                    </Link>\n                }\n             </div>\n        </div>\n    )\n}\n\nexport const query = graphql`\n    query($pathSlug: String!){\n        markdownRemark(frontmatter: { path: {eq: $pathSlug} }) {\n            html\n            frontmatter {\n                title\n            }\n        }\n    }\n`\n\nexport default Template","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}